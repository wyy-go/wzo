// Code generated by protoc-gen-wzo-resty. DO NOT EDIT.
// versions:
// - protoc-gen-wzo-resty 0.0.1
// - protoc               v3.17.3
// source: greeter.proto

package greeter

import (
	context "context"
	errors "errors"
	client "github.com/wyy-go/wzo/core/transport/http/client"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = errors.New
var _ = context.TODO
var _ = client.NewClient

// GreeterHTTPClient
type GreeterHTTPClient interface {
	// SayHello
	SayHello(context.Context, *HelloRequest, ...client.CallOption) (*HelloReply, error)
}

type GreeterHTTPClientImpl struct {
	cc *client.Client
}

func NewGreeterHTTPClient(c *client.Client) GreeterHTTPClient {
	return &GreeterHTTPClientImpl{
		cc: c,
	}
}

// SayHello
func (c *GreeterHTTPClientImpl) SayHello(ctx context.Context, req *HelloRequest, opts ...client.CallOption) (*HelloReply, error) {
	var err error
	var resp HelloReply

	settings := c.cc.CallSetting("/hello/{name}", opts...)
	path := c.cc.EncodeURL(settings.Path, req, true)
	err = c.cc.Invoke(ctx, "GET", path, nil, &resp, settings)
	if err != nil {
		return nil, err
	}
	return &resp, nil
}
